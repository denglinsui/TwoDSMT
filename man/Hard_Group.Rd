% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Hard_Grp.R
\name{Hard_Group}
\alias{Hard_Group}
\title{Hard Group Features}
\usage{
Hard_Group(Org_Value, n.group.max = 10)
}
\arguments{
\item{Org_Value}{a n*p matrix or a dataframe representing observed values of n items with p features; each column represents one feature.}

\item{n.group.max}{an integer representing the maximum number of groups for each feature.}
}
\value{
a list;
Grp_Value is a list where value represents the minimum value of each group, value_up represents the maximum value of each group, and ind represents the item indexes of each group;
Grp_Info is a n\emph{p matrix where i-j element of Grp_Info represents which group the j-th feature of i-th item belongs to;
Grp_Val is a n.group.max}p matrix i-j element of where Grp_Val represents the minimum value of i-th group of j-th feature;
Grp_Val_up is a n.group.max*p matrix where i-j element of Grp_Val_up represents the maximum value of i-th group of j-th feature;
Grp_Val_summarize is the unique values of Grp_Val (in general, there will be n.group.max^p rows);
Grp_Val_up_summarize is the unique values of Grp_Val_up (in general, there will be n.group.max^p rows);
Grp_Ind_summarize is list where i-th term is an integer vector indicating the indexes of the items belongs to i-th row of Grp_Val_summarize/Grp_Val_up_summarize
is.exact.group is a logical value representing whether the group is exact (for example, if the value is discrete, the group would be exact)
}
\description{
Divide each features into several groups with knn. This allows us obtain over-estimated and under-estimated FDP.
}
\examples{
Org_Value <- matrix(runif(100),50,2)
res <- Hard_Group(Org_Value,n.group.max=3)
}
