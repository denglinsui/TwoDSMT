% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SABHA.R
\name{Solve_q_TV_1dim}
\alias{Solve_q_TV_1dim}
\title{SABHA with TV norm constraint on q: ||q||_TV <= TV_bd}
\usage{
Solve_q_TV_1dim(Pvals, tau, eps, TV_bd, ADMM_params)
}
\arguments{
\item{Pvals}{a numerical vector representing p-values.}

\item{tau}{a numerical value for p-value censoring.}

\item{eps}{a numerical value controling estimated null proportion.}

\item{TV_bd}{a numerical value bounding total variation.}

\item{ADMM_params}{the parameters for ADMM.}
}
\value{
the estimated null proportion.
}
\description{
SABHA with TV norm constraint on q: ||q||_TV <= TV_bd
}
\examples{
library(dplyr)
library(fda)
library(qvalue)
# Basic Setting
set.seed(1234)
dig <- 7 # digits precision
n <- 1 # observation number at each point
m <- 120 # point size
q <- 0.1 # fdr level
const <- q # const for stablizing
# Generate data
point <- matrix(seq(0,1,length.out=m), ncol=1)
Dist.p <- as.matrix(dist(point))
I_S <- Init_Setting_1D(mu_type = "Dense",Cov_type = "Weak",
                       magnitude=2,mu_gen_machine="mvnorm",point=point)
mu <- I_S$mu
Sigma.eps.p <- I_S$Sigma.eps.p
X <- MASS::mvrnorm(n = n, mu = mu, Sigma = Sigma.eps.p)
X <- matrix(X, nrow = n)
sgm <- sqrt(diag(Sigma.eps.p))
Tm <- apply(X,2,function(x){sum(x)/sqrt(n)})/sgm # Generate primary statistics
Tm <- round(Tm,dig)
p.value <- 1 - pnorm(Tm) # Generate one-side p.value
# Run SABHA algorithm
tau = 0.5;eps = 0.1; TV_bd = 2
alpha_ADMM = 10^2; beta = 10^3; eta = 5; max_iters = 5000; converge_thr = 1e-4 # parameters for ADMM
ADMM_params = c(alpha_ADMM,beta,eta,max_iters,converge_thr)
qhat = Solve_q_TV_1dim(p.value, tau, eps, TV_bd, ADMM_params)
}
