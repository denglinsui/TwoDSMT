% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Spatial_Detection.R
\name{cutoff.pw.gen.rec}
\alias{cutoff.pw.gen.rec}
\title{Cutoff Initialization (weighted BH based)}
\usage{
cutoff.pw.gen.rec(pws.tm, pws.ta, pws.tm.star = 0, pws.ta.star = 0)
}
\arguments{
\item{pws.tm}{a numerical vector representing the weighted p-values of primary statistics.}

\item{pws.ta}{a numerical vector representing the weighted p-values of representing the auxiliary statistics.}

\item{pws.tm.star}{a numerical value representing the threshold found by one dimensional detection based on the weighted p-values of primary statistics.}

\item{pws.ta.star}{a numerical value representing the threshold found by one dimensional detection based on the weighted p-values of auxiliary statistics.}
}
\value{
list;
cutoff is a matrix with two columns representing the candidate cutoff set and it should be noted that the cutoffs are ordered for searching convenience;
ind.Tm is an integer vector representing the indexes where the first coordinate of cutoffs, Tm, changes.
}
\description{
Initialize the candidate cutoff set based on weighted p-values for primary and auxiliary statistics for searching the optimal threshold.
}
\examples{
library(ggplot2)
set.seed(1234)
Tm <- rnorm(20)
Ta1 <- rnorm(20)
Ta2 <- rnorm(20,Tm,0.5) # depends on Tm
pval.tm <- 1-pnorm(Tm)
pval.ta1 <- 1-pnorm(Ta1)
pval.ta2 <- 1-pnorm(Ta2)
cutoff1 <- cutoff.pw.gen.rec(pval.tm,pval.ta1)
cutoff2 <- cutoff.pw.gen.rec(pval.tm,pval.ta2)
# Visualize finding cutoffs
Type <- c(rep("Cutoff",dim(cutoff1$cutoff)[1]),rep("Data",20))
qplot(x=c(cutoff1$cutoff[,1],pval.tm),y=c(cutoff1$cutoff[,2],pval.ta1),
      colour = Type, shape=Type, xlab="pval.tm", ylab="pval.ta")+
      scale_shape_manual(values = c(20,4))
dim(cutoff1$cutoff)[1] # The number of cutoffs
Type <- c(rep("Cutoff",dim(cutoff2$cutoff)[1]),rep("Data",20))
qplot(x=c(cutoff2$cutoff[,1],pval.tm),y=c(cutoff2$cutoff[,2],pval.ta2),
      colour = Type, shape=Type, xlab="pval.tm", ylab="pval.ta")+
      scale_shape_manual(values = c(20,4))
dim(cutoff2$cutoff)[1] # The number of cutoffs
}
